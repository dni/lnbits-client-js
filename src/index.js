/**
 * lnbits
 * API for LNbits, the free and open source bitcoin wallet and accounts system with plugins.
 *
 * The version of the OpenAPI document: 0.10.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ConversionData from './model/ConversionData';
import CreateExtension from './model/CreateExtension';
import CreateInvoiceData from './model/CreateInvoiceData';
import CreateLNURLData from './model/CreateLNURLData';
import CreateLnurlAuth from './model/CreateLnurlAuth';
import CreateTopup from './model/CreateTopup';
import DecodePayment from './model/DecodePayment';
import EditableSettings from './model/EditableSettings';
import HTTPValidationError from './model/HTTPValidationError';
import LocationInner from './model/LocationInner';
import Page from './model/Page';
import Payment from './model/Payment';
import ValidationError from './model/ValidationError';
import CoreApi from './api/CoreApi';


/**
* API for LNbits, the free and open source bitcoin wallet and accounts system with plugins..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Lnbits = require('index'); // See note below*.
* var xxxSvc = new Lnbits.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Lnbits.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Lnbits.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Lnbits.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.10.9
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ConversionData model constructor.
     * @property {module:model/ConversionData}
     */
    ConversionData,

    /**
     * The CreateExtension model constructor.
     * @property {module:model/CreateExtension}
     */
    CreateExtension,

    /**
     * The CreateInvoiceData model constructor.
     * @property {module:model/CreateInvoiceData}
     */
    CreateInvoiceData,

    /**
     * The CreateLNURLData model constructor.
     * @property {module:model/CreateLNURLData}
     */
    CreateLNURLData,

    /**
     * The CreateLnurlAuth model constructor.
     * @property {module:model/CreateLnurlAuth}
     */
    CreateLnurlAuth,

    /**
     * The CreateTopup model constructor.
     * @property {module:model/CreateTopup}
     */
    CreateTopup,

    /**
     * The DecodePayment model constructor.
     * @property {module:model/DecodePayment}
     */
    DecodePayment,

    /**
     * The EditableSettings model constructor.
     * @property {module:model/EditableSettings}
     */
    EditableSettings,

    /**
     * The HTTPValidationError model constructor.
     * @property {module:model/HTTPValidationError}
     */
    HTTPValidationError,

    /**
     * The LocationInner model constructor.
     * @property {module:model/LocationInner}
     */
    LocationInner,

    /**
     * The Page model constructor.
     * @property {module:model/Page}
     */
    Page,

    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
    * The CoreApi service constructor.
    * @property {module:api/CoreApi}
    */
    CoreApi
};
