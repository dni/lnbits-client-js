/**
 * lnbits
 * API for LNbits, the free and open source bitcoin wallet and accounts system with plugins.
 *
 * The version of the OpenAPI document: 0.10.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Payment model module.
 * @module model/Payment
 * @version 0.10.9
 */
class Payment {
    /**
     * Constructs a new <code>Payment</code>.
     * @alias module:model/Payment
     * @param checkingId {String} 
     * @param pending {Boolean} 
     * @param amount {Number} 
     * @param fee {Number} 
     * @param time {Number} 
     * @param bolt11 {String} 
     * @param preimage {String} 
     * @param paymentHash {String} 
     * @param walletId {String} 
     */
    constructor(checkingId, pending, amount, fee, time, bolt11, preimage, paymentHash, walletId) { 
        
        Payment.initialize(this, checkingId, pending, amount, fee, time, bolt11, preimage, paymentHash, walletId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, checkingId, pending, amount, fee, time, bolt11, preimage, paymentHash, walletId) { 
        obj['checking_id'] = checkingId;
        obj['pending'] = pending;
        obj['amount'] = amount;
        obj['fee'] = fee;
        obj['time'] = time;
        obj['bolt11'] = bolt11;
        obj['preimage'] = preimage;
        obj['payment_hash'] = paymentHash;
        obj['wallet_id'] = walletId;
    }

    /**
     * Constructs a <code>Payment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Payment} obj Optional instance to populate.
     * @return {module:model/Payment} The populated <code>Payment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Payment();

            if (data.hasOwnProperty('checking_id')) {
                obj['checking_id'] = ApiClient.convertToType(data['checking_id'], 'String');
            }
            if (data.hasOwnProperty('pending')) {
                obj['pending'] = ApiClient.convertToType(data['pending'], 'Boolean');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
            }
            if (data.hasOwnProperty('memo')) {
                obj['memo'] = ApiClient.convertToType(data['memo'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Number');
            }
            if (data.hasOwnProperty('bolt11')) {
                obj['bolt11'] = ApiClient.convertToType(data['bolt11'], 'String');
            }
            if (data.hasOwnProperty('preimage')) {
                obj['preimage'] = ApiClient.convertToType(data['preimage'], 'String');
            }
            if (data.hasOwnProperty('payment_hash')) {
                obj['payment_hash'] = ApiClient.convertToType(data['payment_hash'], 'String');
            }
            if (data.hasOwnProperty('expiry')) {
                obj['expiry'] = ApiClient.convertToType(data['expiry'], 'Number');
            }
            if (data.hasOwnProperty('extra')) {
                obj['extra'] = ApiClient.convertToType(data['extra'], Object);
            }
            if (data.hasOwnProperty('wallet_id')) {
                obj['wallet_id'] = ApiClient.convertToType(data['wallet_id'], 'String');
            }
            if (data.hasOwnProperty('webhook')) {
                obj['webhook'] = ApiClient.convertToType(data['webhook'], 'String');
            }
            if (data.hasOwnProperty('webhook_status')) {
                obj['webhook_status'] = ApiClient.convertToType(data['webhook_status'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Payment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Payment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Payment.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['checking_id'] && !(typeof data['checking_id'] === 'string' || data['checking_id'] instanceof String)) {
            throw new Error("Expected the field `checking_id` to be a primitive type in the JSON string but got " + data['checking_id']);
        }
        // ensure the json data is a string
        if (data['memo'] && !(typeof data['memo'] === 'string' || data['memo'] instanceof String)) {
            throw new Error("Expected the field `memo` to be a primitive type in the JSON string but got " + data['memo']);
        }
        // ensure the json data is a string
        if (data['bolt11'] && !(typeof data['bolt11'] === 'string' || data['bolt11'] instanceof String)) {
            throw new Error("Expected the field `bolt11` to be a primitive type in the JSON string but got " + data['bolt11']);
        }
        // ensure the json data is a string
        if (data['preimage'] && !(typeof data['preimage'] === 'string' || data['preimage'] instanceof String)) {
            throw new Error("Expected the field `preimage` to be a primitive type in the JSON string but got " + data['preimage']);
        }
        // ensure the json data is a string
        if (data['payment_hash'] && !(typeof data['payment_hash'] === 'string' || data['payment_hash'] instanceof String)) {
            throw new Error("Expected the field `payment_hash` to be a primitive type in the JSON string but got " + data['payment_hash']);
        }
        // ensure the json data is a string
        if (data['wallet_id'] && !(typeof data['wallet_id'] === 'string' || data['wallet_id'] instanceof String)) {
            throw new Error("Expected the field `wallet_id` to be a primitive type in the JSON string but got " + data['wallet_id']);
        }
        // ensure the json data is a string
        if (data['webhook'] && !(typeof data['webhook'] === 'string' || data['webhook'] instanceof String)) {
            throw new Error("Expected the field `webhook` to be a primitive type in the JSON string but got " + data['webhook']);
        }

        return true;
    }


}

Payment.RequiredProperties = ["checking_id", "pending", "amount", "fee", "time", "bolt11", "preimage", "payment_hash", "wallet_id"];

/**
 * @member {String} checking_id
 */
Payment.prototype['checking_id'] = undefined;

/**
 * @member {Boolean} pending
 */
Payment.prototype['pending'] = undefined;

/**
 * @member {Number} amount
 */
Payment.prototype['amount'] = undefined;

/**
 * @member {Number} fee
 */
Payment.prototype['fee'] = undefined;

/**
 * @member {String} memo
 */
Payment.prototype['memo'] = undefined;

/**
 * @member {Number} time
 */
Payment.prototype['time'] = undefined;

/**
 * @member {String} bolt11
 */
Payment.prototype['bolt11'] = undefined;

/**
 * @member {String} preimage
 */
Payment.prototype['preimage'] = undefined;

/**
 * @member {String} payment_hash
 */
Payment.prototype['payment_hash'] = undefined;

/**
 * @member {Number} expiry
 */
Payment.prototype['expiry'] = undefined;

/**
 * @member {Object} extra
 */
Payment.prototype['extra'] = undefined;

/**
 * @member {String} wallet_id
 */
Payment.prototype['wallet_id'] = undefined;

/**
 * @member {String} webhook
 */
Payment.prototype['webhook'] = undefined;

/**
 * @member {Number} webhook_status
 */
Payment.prototype['webhook_status'] = undefined;






export default Payment;

