/**
 * lnbits
 * API for LNbits, the free and open source bitcoin wallet and accounts system with plugins.
 *
 * The version of the OpenAPI document: 0.10.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Lnbits);
  }
}(this, function(expect, Lnbits) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Lnbits.CoreApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CoreApi', function() {
    describe('apiDeleteSettingsAdminApiV1SettingsDelete', function() {
      it('should call apiDeleteSettingsAdminApiV1SettingsDelete successfully', function(done) {
        //uncomment below and update the code to test apiDeleteSettingsAdminApiV1SettingsDelete
        //instance.apiDeleteSettingsAdminApiV1SettingsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDownloadBackupAdminApiV1BackupGet', function() {
      it('should call apiDownloadBackupAdminApiV1BackupGet successfully', function(done) {
        //uncomment below and update the code to test apiDownloadBackupAdminApiV1BackupGet
        //instance.apiDownloadBackupAdminApiV1BackupGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiFiatAsSatsApiV1ConversionPost', function() {
      it('should call apiFiatAsSatsApiV1ConversionPost successfully', function(done) {
        //uncomment below and update the code to test apiFiatAsSatsApiV1ConversionPost
        //instance.apiFiatAsSatsApiV1ConversionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiGetSettingsAdminApiV1SettingsGet', function() {
      it('should call apiGetSettingsAdminApiV1SettingsGet successfully', function(done) {
        //uncomment below and update the code to test apiGetSettingsAdminApiV1SettingsGet
        //instance.apiGetSettingsAdminApiV1SettingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiInstallExtensionApiV1ExtensionPost', function() {
      it('should call apiInstallExtensionApiV1ExtensionPost successfully', function(done) {
        //uncomment below and update the code to test apiInstallExtensionApiV1ExtensionPost
        //instance.apiInstallExtensionApiV1ExtensionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiListCurrenciesAvailableApiV1CurrenciesGet', function() {
      it('should call apiListCurrenciesAvailableApiV1CurrenciesGet successfully', function(done) {
        //uncomment below and update the code to test apiListCurrenciesAvailableApiV1CurrenciesGet
        //instance.apiListCurrenciesAvailableApiV1CurrenciesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiLnurlscanApiV1LnurlscanCodeGet', function() {
      it('should call apiLnurlscanApiV1LnurlscanCodeGet successfully', function(done) {
        //uncomment below and update the code to test apiLnurlscanApiV1LnurlscanCodeGet
        //instance.apiLnurlscanApiV1LnurlscanCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPaymentApiV1PaymentsPaymentHashGet', function() {
      it('should call apiPaymentApiV1PaymentsPaymentHashGet successfully', function(done) {
        //uncomment below and update the code to test apiPaymentApiV1PaymentsPaymentHashGet
        //instance.apiPaymentApiV1PaymentsPaymentHashGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPaymentsCreateApiV1PaymentsPost', function() {
      it('should call apiPaymentsCreateApiV1PaymentsPost successfully', function(done) {
        //uncomment below and update the code to test apiPaymentsCreateApiV1PaymentsPost
        //instance.apiPaymentsCreateApiV1PaymentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPaymentsDecodeApiV1PaymentsDecodePost', function() {
      it('should call apiPaymentsDecodeApiV1PaymentsDecodePost successfully', function(done) {
        //uncomment below and update the code to test apiPaymentsDecodeApiV1PaymentsDecodePost
        //instance.apiPaymentsDecodeApiV1PaymentsDecodePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPaymentsPayLnurlApiV1PaymentsLnurlPost', function() {
      it('should call apiPaymentsPayLnurlApiV1PaymentsLnurlPost successfully', function(done) {
        //uncomment below and update the code to test apiPaymentsPayLnurlApiV1PaymentsLnurlPost
        //instance.apiPaymentsPayLnurlApiV1PaymentsLnurlPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPaymentsSseApiV1PaymentsSseGet', function() {
      it('should call apiPaymentsSseApiV1PaymentsSseGet successfully', function(done) {
        //uncomment below and update the code to test apiPaymentsSseApiV1PaymentsSseGet
        //instance.apiPaymentsSseApiV1PaymentsSseGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPerformLnurlauthApiV1LnurlauthPost', function() {
      it('should call apiPerformLnurlauthApiV1LnurlauthPost successfully', function(done) {
        //uncomment below and update the code to test apiPerformLnurlauthApiV1LnurlauthPost
        //instance.apiPerformLnurlauthApiV1LnurlauthPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPublicPaymentLongpollingPublicV1PaymentPaymentHashGet', function() {
      it('should call apiPublicPaymentLongpollingPublicV1PaymentPaymentHashGet successfully', function(done) {
        //uncomment below and update the code to test apiPublicPaymentLongpollingPublicV1PaymentPaymentHashGet
        //instance.apiPublicPaymentLongpollingPublicV1PaymentPaymentHashGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestartServerAdminApiV1RestartGet', function() {
      it('should call apiRestartServerAdminApiV1RestartGet successfully', function(done) {
        //uncomment below and update the code to test apiRestartServerAdminApiV1RestartGet
        //instance.apiRestartServerAdminApiV1RestartGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiUninstallExtensionApiV1ExtensionExtIdDelete', function() {
      it('should call apiUninstallExtensionApiV1ExtensionExtIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiUninstallExtensionApiV1ExtensionExtIdDelete
        //instance.apiUninstallExtensionApiV1ExtensionExtIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiUpdateSettingsAdminApiV1SettingsPut', function() {
      it('should call apiUpdateSettingsAdminApiV1SettingsPut successfully', function(done) {
        //uncomment below and update the code to test apiUpdateSettingsAdminApiV1SettingsPut
        //instance.apiUpdateSettingsAdminApiV1SettingsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiUpdateWalletApiV1WalletNewNamePut', function() {
      it('should call apiUpdateWalletApiV1WalletNewNamePut successfully', function(done) {
        //uncomment below and update the code to test apiUpdateWalletApiV1WalletNewNamePut
        //instance.apiUpdateWalletApiV1WalletNewNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiWalletApiV1WalletGet', function() {
      it('should call apiWalletApiV1WalletGet successfully', function(done) {
        //uncomment below and update the code to test apiWalletApiV1WalletGet
        //instance.apiWalletApiV1WalletGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('auditAdminApiV1AuditGet', function() {
      it('should call auditAdminApiV1AuditGet successfully', function(done) {
        //uncomment below and update the code to test auditAdminApiV1AuditGet
        //instance.auditAdminApiV1AuditGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionDbApiV1ExtensionExtIdDbDelete', function() {
      it('should call deleteExtensionDbApiV1ExtensionExtIdDbDelete successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionDbApiV1ExtensionExtIdDbDelete
        //instance.deleteExtensionDbApiV1ExtensionExtIdDbDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExtensionReleaseApiV1ExtensionReleaseOrgRepoTagNameGet', function() {
      it('should call getExtensionReleaseApiV1ExtensionReleaseOrgRepoTagNameGet successfully', function(done) {
        //uncomment below and update the code to test getExtensionReleaseApiV1ExtensionReleaseOrgRepoTagNameGet
        //instance.getExtensionReleaseApiV1ExtensionReleaseOrgRepoTagNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExtensionReleasesApiV1ExtensionExtIdReleasesGet', function() {
      it('should call getExtensionReleasesApiV1ExtensionExtIdReleasesGet successfully', function(done) {
        //uncomment below and update the code to test getExtensionReleasesApiV1ExtensionExtIdReleasesGet
        //instance.getExtensionReleasesApiV1ExtensionExtIdReleasesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('healthApiV1HealthGet', function() {
      it('should call healthApiV1HealthGet successfully', function(done) {
        //uncomment below and update the code to test healthApiV1HealthGet
        //instance.healthApiV1HealthGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('imgApiV1QrcodeDataGet', function() {
      it('should call imgApiV1QrcodeDataGet successfully', function(done) {
        //uncomment below and update the code to test imgApiV1QrcodeDataGet
        //instance.imgApiV1QrcodeDataGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('paymentListApiV1PaymentsGet', function() {
      it('should call paymentListApiV1PaymentsGet successfully', function(done) {
        //uncomment below and update the code to test paymentListApiV1PaymentsGet
        //instance.paymentListApiV1PaymentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('paymentListApiV1PaymentsPaginatedGet', function() {
      it('should call paymentListApiV1PaymentsPaginatedGet successfully', function(done) {
        //uncomment below and update the code to test paymentListApiV1PaymentsPaginatedGet
        //instance.paymentListApiV1PaymentsPaginatedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tinyurlApiV1TinyurlPost', function() {
      it('should call tinyurlApiV1TinyurlPost successfully', function(done) {
        //uncomment below and update the code to test tinyurlApiV1TinyurlPost
        //instance.tinyurlApiV1TinyurlPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tinyurlApiV1TinyurlTinyurlIdDelete', function() {
      it('should call tinyurlApiV1TinyurlTinyurlIdDelete successfully', function(done) {
        //uncomment below and update the code to test tinyurlApiV1TinyurlTinyurlIdDelete
        //instance.tinyurlApiV1TinyurlTinyurlIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tinyurlApiV1TinyurlTinyurlIdGet', function() {
      it('should call tinyurlApiV1TinyurlTinyurlIdGet successfully', function(done) {
        //uncomment below and update the code to test tinyurlApiV1TinyurlTinyurlIdGet
        //instance.tinyurlApiV1TinyurlTinyurlIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tinyurlTTinyurlIdGet', function() {
      it('should call tinyurlTTinyurlIdGet successfully', function(done) {
        //uncomment below and update the code to test tinyurlTTinyurlIdGet
        //instance.tinyurlTTinyurlIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('topupAdminApiV1TopupPut', function() {
      it('should call topupAdminApiV1TopupPut successfully', function(done) {
        //uncomment below and update the code to test topupAdminApiV1TopupPut
        //instance.topupAdminApiV1TopupPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websocketUpdateGetApiV1WsItemIdDataGet', function() {
      it('should call websocketUpdateGetApiV1WsItemIdDataGet successfully', function(done) {
        //uncomment below and update the code to test websocketUpdateGetApiV1WsItemIdDataGet
        //instance.websocketUpdateGetApiV1WsItemIdDataGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websocketUpdatePostApiV1WsItemIdPost', function() {
      it('should call websocketUpdatePostApiV1WsItemIdPost successfully', function(done) {
        //uncomment below and update the code to test websocketUpdatePostApiV1WsItemIdPost
        //instance.websocketUpdatePostApiV1WsItemIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
